{"ast":null,"code":"var _jsxFileName = \"/Users/nestorvega/Desktop/cohort_10_2022/week_11_day_2/aa-w11d2/src/components/Weather.js\";\nimport React from 'react';\nimport { toQueryString } from '../utils';\nimport \"process\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log();\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pollWeather = async location => {\n      let url = 'http://api.openweathermap.org/data/2.5/weather?';\n      /* Remember that it's unsafe to expose your API key. (Note that pushing\n      files that include your key to Github will expose your key!) In\n      production, you would definitely save your key in an environment variable,\n      so do that here. Since this project runs in your local environment\n      (localhost), save your key as an environment variable in a .env file in\n      the root directory of your app. You can then access the key here as\n      \"process.env.<variable_name>\". Make sure to .gitignore your .env file!\n      Also remember to restart your server (i.e., re-run \"npm start\") whenever\n      you change your .env file. */\n\n      const apiKey = '???';\n      const params = {\n        lat: location.coords.latitude,\n        lon: location.coords.longitude,\n        appid: apiKey\n      };\n      url += toQueryString(params);\n      const res = await fetch(url);\n\n      if (res.ok) {\n        const weather = await res.json();\n        this.setState({\n          weather\n        });\n      } else {\n        alert(\"Check Weather API key!\");\n      }\n    };\n\n    this.state = {\n      weather: null\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(this.pollWeather, err => console.log(err), {\n      timeout: 10000\n    });\n  }\n\n  render() {\n    const weather = this.state.weather;\n\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this);\n\n    if (weather) {\n      const temp = (weather.main.temp - 273.15) * 1.8 + 32;\n      content = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [temp.toFixed(1), \" degrees\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"weather-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/nestorvega/Desktop/cohort_10_2022/week_11_day_2/aa-w11d2/src/components/Weather.js"],"names":["React","toQueryString","console","log","Weather","Component","constructor","props","pollWeather","location","url","apiKey","params","lat","coords","latitude","lon","longitude","appid","res","fetch","ok","weather","json","setState","alert","state","componentDidMount","navigator","geolocation","getCurrentPosition","err","timeout","render","content","temp","main","name","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAO,SAAP;;AAEAC,OAAO,CAACC,GAAR;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,WAfmB,GAeL,MAAOC,QAAP,IAAoB;AAChC,UAAIC,GAAG,GAAG,iDAAV;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,YAAMC,MAAM,GAAG,KAAf;AAEA,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEJ,QAAQ,CAACK,MAAT,CAAgBC,QADR;AAEbC,QAAAA,GAAG,EAAEP,QAAQ,CAACK,MAAT,CAAgBG,SAFR;AAGbC,QAAAA,KAAK,EAAEP;AAHM,OAAf;AAMAD,MAAAA,GAAG,IAAIT,aAAa,CAACW,MAAD,CAApB;AAEA,YAAMO,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAvB;;AACA,UAAIS,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAtB;AACA,aAAKC,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACD,OAHD,MAIK;AACHG,QAAAA,KAAK,CAAE,wBAAF,CAAL;AACD;AACF,KA7CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,KAAKtB,WADP,EAEGuB,GAAD,IAAS7B,OAAO,CAACC,GAAR,CAAY4B,GAAZ,CAFX,EAGE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAHF;AAKD;;AAkCHC,EAAAA,MAAM,GAAG;AACP,UAAMX,OAAO,GAAG,KAAKI,KAAL,CAAWJ,OAA3B;;AACA,QAAIY,OAAO,gBAAG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;;AAEA,QAAIZ,OAAJ,EAAa;AACX,YAAMa,IAAI,GAAG,CAACb,OAAO,CAACc,IAAR,CAAaD,IAAb,GAAoB,MAArB,IAA+B,GAA/B,GAAqC,EAAlD;AACAD,MAAAA,OAAO,gBACL;AAAA,gCACE;AAAA,oBAAIZ,OAAO,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIF,IAAI,CAACG,OAAL,CAAa,CAAb,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AAED,wBACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtEmC;;AAyEtC,eAAe9B,OAAf","sourcesContent":["import React from 'react';\nimport { toQueryString } from '../utils';\nimport \"process\"\n\nconsole.log()\n\nclass Weather extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        weather: null\n      };\n    }\n\n    componentDidMount() {\n      navigator.geolocation.getCurrentPosition(\n        this.pollWeather,\n        (err) => console.log(err),\n        { timeout: 10000 }\n      );\n    }\n\n    pollWeather = async (location) => {\n      let url = 'http://api.openweathermap.org/data/2.5/weather?';\n\n      /* Remember that it's unsafe to expose your API key. (Note that pushing\n      files that include your key to Github will expose your key!) In\n      production, you would definitely save your key in an environment variable,\n      so do that here. Since this project runs in your local environment\n      (localhost), save your key as an environment variable in a .env file in\n      the root directory of your app. You can then access the key here as\n      \"process.env.<variable_name>\". Make sure to .gitignore your .env file!\n      Also remember to restart your server (i.e., re-run \"npm start\") whenever\n      you change your .env file. */\n      const apiKey = '???';\n\n      const params = {\n        lat: location.coords.latitude,\n        lon: location.coords.longitude,\n        appid: apiKey\n      };\n\n      url += toQueryString(params);\n\n      const res = await fetch(url);\n      if (res.ok) {\n        const weather = await res.json();\n        this.setState({ weather });\n      }\n      else {\n        alert (\"Check Weather API key!\")\n      }\n    }\n\n  render() {\n    const weather = this.state.weather;\n    let content = <div className='loading'>loading weather...</div>;\n\n    if (weather) {\n      const temp = (weather.main.temp - 273.15) * 1.8 + 32;\n      content = (\n        <div>\n          <p>{weather.name}</p>\n          <p>{temp.toFixed(1)} degrees</p>\n        </div>\n      );\n    }\n\n    return (\n      <section className=\"weather-section\">\n        <h1>Weather</h1>\n        <div className='weather'>\n          {content}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}